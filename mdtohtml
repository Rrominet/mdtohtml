#!/usr/local/bin/python3
#

import os
import subprocess
import sys
from ml import fileTools as ft

def main() : 
    if len(sys.argv) <= 1 :
        print("Usage : " + ft.baseName(sys.argv[0]) + " <mdfile>")
        print("add --help for more infos.")
        exit(1)
    elif "--help" in sys.argv or "-h" in sys.argv :
        print("if <outputfile> is not given, <mdfile> is used as filebasename. Idem for the title.")
        print("Usage : " + ft.baseName(sys.argv[0]) + " <mdfile> <htmltitle> <outputfile>")
        exit(1)
    else :
        mdfile = sys.argv[1]
        mdfile = os.path.abspath(mdfile)
        htmltitle = ""
        outputfile = ""
        if len(sys.argv) > 2 :
            htmltitle = sys.argv[2]
        else :
            htmltitle = ft.baseName(mdfile)
            htmltitle = htmltitle.replace("_", " ")
            htmltitle = htmltitle.replace("-", " ")
            htmltitle = htmltitle.title()
        if len(sys.argv) > 3 :
            outputfile = sys.argv[3]
        else :
            outputfile = ft.baseName(mdfile) + ".html"
            outputfile = os.path.dirname(os.path.abspath(mdfile)) + os.sep + outputfile

        tplpath = os.path.dirname(__file__) + "/md_template.html"
        cmd = ["pandoc", mdfile, "-o", outputfile, "--from", "markdown+hard_line_breaks", "-s", "--template=" + tplpath, "-M", "title=" + htmltitle]
        proc = subprocess.run(cmd, capture_output=True, text=True)

        if proc.returncode != 0 :
            print("Conversion failed :")
            print(proc.stderr)
            exit(1)
        else : 
            print("File " + outputfile + " created.")

main()
